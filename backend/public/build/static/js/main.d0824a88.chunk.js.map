{"version":3,"sources":["components/404/NotFound.js","services/auth.js","services/todo.js","hooks/context.js","pages/AppLayout.js","pages/Todos.js","pages/Login.js","pages/Signup.js","pages/TodoInfo.js","Router.js","serviceWorker.js","index.js"],"names":["NotFound","baseURL","service","axios","create","withCredentials","profileService","get","Context","createContext","ContextProvider","props","useState","user","setUser","useEffect","a","data","login","_id","email","getSessionData","value","logout","Provider","useContextInfo","useContext","Header","Layout","Content","Footer","AppLayout","children","className","theme","mode","defaultSelectedKeys","Item","key","to","onClick","style","padding","minHeight","textAlign","xs","span","s","offset","lg","todosService","todoService","id","Todos","todos","setTodos","getTodosFunc","deleteHandle","post","then","res","filter","todo","toast","warning","catch","err","console","log","onChangeHandle","e","target","checked","isCheckedHandle","completed","userInfo","length","map","description","defaultChecked","onChange","onFinish","error","success","name","placeholder","block","type","htmlType","Login","history","push","loginHandle","password","initialValues","remember","rules","required","message","prefix","UserOutlined","LockOutlined","valuePropName","noStyle","Signup","handleSignup","userInput","TodoInfo","match","setTodo","params","getWorkoutsFunction","Router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","Slide","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0824a88.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  ? (baseURL = '')\n  : (baseURL = 'http://localhost:3000/auth');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nexport const signupService = (userInfo) => service.post(\"/auth/signup\", userInfo)\nexport const loginService = (userInfo) => service.post(\"/auth/login\", userInfo)\nexport const profileService = () => service.get(\"/auth/profile\")\nexport const logoutService = () => service.get(\"/auth/logout\")\n","import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  ? (baseURL = '')\n  : (baseURL = 'http://localhost:3000/todo');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nexport const createService = (userInfo) => service.post(\"/todo/create\", userInfo)\nexport const deleteService = (id) => service.post(\"/todo/delete\", id)\nexport const todosService = () => service.get(\"/todo/todos\")\nexport const todoService = (id) => service.get(`/todo/info/${id}`)\nexport const isCompletedService = (userInfo) => service.post(`/todo/completed`, userInfo)","import React, { useState, createContext, useContext, useEffect } from \"react\"\nimport { profileService } from \"../services/auth\"\n\nexport const Context = createContext()\n\nexport const ContextProvider = (props) => {\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    async function getSessionData() {\n      const { data: data } = await profileService()\n      login({ _id: data._id, email: data.email })\n    }\n    getSessionData()\n  }, [])\n\n  const login = (user) => {\n    setUser(user)\n  }\n\n  const logout = () => {\n    setUser(null)\n  }\n\n  const value = { user, login, logout }\n\n  return <Context.Provider {...props} value={value} />\n}\n\n// Hook\nexport const useContextInfo = () => useContext(Context)\n","import { Layout, Menu, Row, Col } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport React from \"react\"\nimport { logoutService } from \"../services/auth\"\nimport { useContextInfo } from \"../hooks/context\"\nconst { Header, Content, Footer } = Layout\n\nconst AppLayout = ({ children }) => {\n  const { user, logout } = useContextInfo()\n  const handleLogout = () => {\n    logoutService()\n    logout()\n  }\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n          <Menu.Item key=\"1\">\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          {!user ? (\n            <>\n              <Menu.Item key=\"2\">\n                <Link to=\"/signup\">Signup</Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Link to=\"/login\">Login</Link>\n              </Menu.Item>\n            </>\n          ) : (\n            <Menu.Item onClick={handleLogout} key=\"4\">\n              Logout\n            </Menu.Item>\n          )}\n        </Menu>\n      </Header>\n      <Content style={{ padding: \"0 50px\", minHeight: \"100vh\" }}>\n        <div className=\"site-layout-content\">{children}</div>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        <Row>\n          <Col\n            xs={{ span: 24 }}\n            s={{ span: 22, offset: 1 }}\n            lg={{ span: 22, offset: 1 }}\n          >\n            <div className=\"footer__container\">\n              <p>Developed by Mauricio Figueroa</p>\n              <p>mfigueroadev © Copyright 2020</p>\n            </div>\n          </Col>\n        </Row>\n      </Footer>\n    </Layout>\n  )\n}\n\nexport default AppLayout\n","import React, { useEffect, useState } from \"react\"\nimport {\n  todosService,\n  createService,\n  deleteService,\n  isCompletedService,\n} from \"../services/todo\"\nimport { Link } from \"react-router-dom\"\nimport { useContextInfo } from \"../hooks/context\"\nimport { Form, Input, Button, Checkbox } from \"antd\"\nimport { toast } from \"react-toastify\"\nimport \"./Todos.scss\"\n\nconst Todos = () => {\n  const [todos, setTodos] = useState([])\n  const { user } = useContextInfo()\n  useEffect(() => {\n    async function getTodosFunc() {\n      const { data: data } = await todosService()\n      setTodos(data)\n    }\n    getTodosFunc()\n  }, [])\n  const submitHandle = (value) => {\n    if (!value.description)\n      return toast.error(\"Please provide a description for your task!\")\n    console.log(value.description)\n    createService(value)\n      .then((res) => {\n        setTodos((todos) => [...todos, res.data])\n        toast.success(\"Todo added sucessfully!\")\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const deleteHandle = (value) => {\n    deleteService(value)\n      .then((res) => {\n        setTodos(todos.filter((todo) => todo._id !== value._id))\n        toast.warning(\"Todo deleted sucessfully!\")\n      })\n      .catch((err) => console.log(\"error!\"))\n  }\n  const onChangeHandle = (e) => {\n    console.log(`checked = ${e.target.checked}`)\n  }\n\n  const isCheckedHandle = (id, completed) => {\n    console.log(id, completed)\n    isCompletedService({ id, completed })\n      .then((res) => {\n        setTodos(todos.filter((todo) => todo._id !== res.data._id))\n        setTodos((todos) => [...todos, res.data])\n      })\n      .catch((err) => console.log(err))\n  }\n  return (\n    <div className=\"container\">\n      {user ? (\n        <>\n          {todos.length > 0 ? (\n            <>\n              <h1>Pending tasks</h1>\n              {todos.map((todo) => (\n                <div className=\"todo-element\" key={todo._id}>\n                  <Link to={`/to-do/${todo._id}`}>\n                    <li>{todo.description}</li>\n                  </Link>\n                  <div>\n                    <Checkbox\n                      defaultChecked={todo.completed}\n                      onClick={() => isCheckedHandle(todo._id, todo.completed)}\n                      onChange={onChangeHandle}\n                    />\n                    <i\n                      onClick={() => deleteHandle(todo)}\n                      className=\"fas fa-trash-alt\"\n                    ></i>\n                  </div>\n                </div>\n              ))}\n            </>\n          ) : (\n            <>\n              <h1>You have no todos yet</h1>\n            </>\n          )}\n          <Form onFinish={submitHandle}>\n            <Form.Item name=\"description\">\n              <Input placeholder=\"Add todo\" />\n            </Form.Item>\n            <Button block type=\"primary\" htmlType=\"submit\">\n              Add\n            </Button>\n          </Form>\n        </>\n      ) : (\n        <h1>Log in to manage your todos!</h1>\n      )}\n    </div>\n  )\n}\n\nexport default Todos\n","import React from \"react\"\nimport { Form, Input, Button, Checkbox } from \"antd\"\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\"\nimport { loginService } from \"../services/auth\"\nimport { useContextInfo } from \"../hooks/context\"\nimport { Link } from \"react-router-dom\"\n\nconst Login = ({ history }) => {\n  const { login, user } = useContextInfo()\n  if (user) history.push(\"/\")\n  const loginHandle = async ({ email, password }) => {\n    await loginService({ email, password })\n    history.push(\"/\")\n    login(email)\n  }\n\n  return (\n    <>\n    <br/>\n    <Form\n      name=\"normal_login\"\n      className=\"login-form\"\n      initialValues={{ remember: true }}\n      onFinish={loginHandle}\n    >\n      <Form.Item\n        name=\"email\"\n        rules={[{ required: true, message: \"Please input your Username!\" }]}\n      >\n        <Input\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          placeholder=\"Username\"\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: \"Please input your Password!\" }]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n      <Form.Item>\n        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Log in\n        </Button>\n        <br />\n        Or\n        <br />\n        <Link to=\"/signup\">register now!</Link>\n      </Form.Item>\n    </Form>\n    </>\n  )\n}\n\nexport default Login\n","import React from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\"\nimport { signupService } from \"../services/auth\"\nimport { useContextInfo } from \"../hooks/context\"\n\nconst Signup = ({ history }) => {\n  const { user } = useContextInfo()\n  if (user) history.push(\"/\")\n  const handleSignup = async (userInput) => {\n    await signupService(userInput)\n    history.push(\"/login\")\n  }\n\n  return (\n   <>\n   <br/>\n    <Form\n      name=\"normal_login\"\n      className=\"login-form\"\n      initialValues={{ remember: true }}\n      onFinish={handleSignup}\n    >\n      <Form.Item\n        name=\"email\"\n        rules={[{ required: true, message: \"Please input your Username!\" }]}\n      >\n        <Input\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          placeholder=\"Username\"\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: \"Please enter your Password!\" }]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Signup\n        </Button>\n      </Form.Item>\n    </Form>\n   </>\n  )\n}\n\nexport default Signup\n","import React, { useEffect, useState } from \"react\"\nimport { todoService } from \"../services/todo\"\n\nfunction TodoInfo({ match }) {\n  const [todo, setTodo] = useState(null)\n  useEffect(() => {\n    async function getWorkoutsFunction() {\n      const { data } = await todoService(match.params.id)\n      setTodo(data)\n    }\n    getWorkoutsFunction()\n  }, [])\n  return (\n    <div className='container'>\n      {todo ? (\n        <>\n          <h3>Task: </h3>\n          <h4>{todo.description} </h4>\n          {todo.completed ? (\n              <h5>This task has been completed. One less thing to worry about!</h5>\n          ): (\n              <h5>This task has not been completed yet!</h5>\n          )}\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  )\n}\n\nexport default TodoInfo\n","import React from \"react\"\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport NotFound from \"./components/404/NotFound.js\"\nimport AppLayout from \"./pages/AppLayout\"\nimport Todos from './pages/Todos'\nimport Login from './pages/Login'\nimport Signup from './pages/Signup'\nimport TodoInfo from './pages/TodoInfo'\n\nconst Router = () => (\n  <BrowserRouter>\n    <AppLayout>\n      <Switch>\n        <Route exact={true} path=\"/\" component={Todos} />\n        <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route exact path=\"/to-do/:id\" component={TodoInfo} />\n        <Route component={NotFound} />\n      </Switch>\n    </AppLayout>\n  </BrowserRouter>\n)\n\nexport default Router\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport Router from \"./Router\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport \"antd/dist/antd.css\"\nimport { ContextProvider } from \"./hooks/context\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './index.css'\n\nReactDOM.render(\n  <>\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={4500}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n      transition={Slide}\n    />\n    <ContextProvider>\n      <Router />\n    </ContextProvider>\n  </>,\n  document.getElementById(\"root\")\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}